*{
  margin:0;
  padding:0;
  font-family: cursive;

}
body {
  height: 100vh;

  width: 100vw;
  display: flex;
  justify-content: start;

  align-items: center;
  flex-direction: column;
  gap: 2px;

  background-color: purple;  }

header{
    height: 100px;  
    
    
    display: flex; 
    flex-direction: column;
    
    align-items: center;

    justify-content: center;
    gap: 10px;}
.heading{
    color: yellow;
}


.maincontentmiddle{     /*This is the part that holds all buttons push/pop/refresh, the bucket, and the information
                            on the right side.*/
    height: 610px;
    width: 941px;


    background-color: white;

box-shadow: 8px 8px 20px orangered;

position: relative;     border-radius: 20px;
}






.container-header {    /* This is the "header" part of the class ".maincontentmiddle" */ 
    height: 90px;
    width: 100%;
    display: flex;

    justify-content: center;
    align-items: center;
    gap: 20px;
    margin-bottom: 20px;  margin-top: 10px;
 }
.container-header input{    /* The part where the user will enter the numbers regarding the stack*/
  
    height: 50px;
   width: 400px;

   font-size: 25px;
   border-radius: 10px;
   padding-left: 10px;
   padding-right: 5px;
}

.push,
.pop,
.refresh{     /*Push, pop and refresh buttons */
    height: 46px;
    width: 140px;


    font-size: 25px;
    background-color: green;
    color: white;
    border-radius: 10px;    cursor: pointer;   border: none;   transition: 0.2s;

 }




 .box{  
   height: 50px;  /*The box after the information "Top of the stack, Last item pushed",etc.   */
   width: 140px;
   font-size: 25px;
      background-color: blue;  color: white;  border-radius: 10px;
   border: none;}
 
 
 
 
 
 
 
 
  .freezestate{     /* When the user is not permitted to enter any number for a while, the color of the buttons
    
    push/pop/refresh will turn strong green.*/


    background-color: rgb(0,59,0);
 }


 
 
 
 
 
 
 


 .container-body {   /*The "body" part of the part of stack operations, like in HTML*/
    width: 1000px;

  display: flex;
  justify-content: space-evenly;
  align-items: center;
 }



 .stack{    /*The stack border that separates the stack bucket from the message  */
    width: 500px;   height: 470px;

    display: flex;
    justify-content: center;

    align-items: center;

    border-width: 0 3px 0 0;
    border-color: black;
    border-style: solid;
 }


 .stackbucket {    /* The stack bucket that will hold the elements*/
   height: 450px;
   width: 200px;


   border-width: 0px 4px 4px 4px;



   border-color: black;
   border-style: inset;
   display: flex;





   justify-content: end;
   align-items: center;
   flex-direction: column-reverse;
   gap: 2px;
   padding-bottom: 2px;  border-radius: 0px 0px 10px 10px;
 }

 .bucketelement{   /*The output that will be shown after the user enters it (if he pops it then the output will be
                                                     disappeared).  */
   height: 80px;
   width: 170px;
   background-color: orange;
   color: white;
   border-style: solid;
border-radius: 20px;
font-size: 25px;
display: flex;


justify-content: center;
align-items: center;
  }

  
  .addelement{            /* Important to show the color that shows whether the stack will be pushed (it will be green)
    
    or popped (it will be red).*/
    animation: pushanimation 0.3s infinite linear;}



   .removeelement{  
   animation: popanimation 0.3s infinite linear;
   }
   
   

    @keyframes pushanimation{  
    0%{  
        background-color: orange;
    }
    100%{  
        background-color: green;
    }
    }

    @keyframes popanimation{  
        0%{  
            background-color: orange;
        }
        100%{  
            background-color: rgb(255, 15, 59);
        }
        }
    

.info{  
    height: 470px;
    width: 500px;
    padding-left: 20px;
   }

   [class ^= "sec"]{    /*It consists of all the classes that start with "sec" in HTML, i.e sec1, sec2, etc.
                           
                               They correspond to the buttons in the HTML file.*/
    display: flex;
    width: 350px;
    align-items: center;
    gap: 10px;
    margin-top: 10px;
    justify-content: space-between;
}



.messagebox{    /*It shows information about the stack*/
    height: 180px;
    width: 400px;
    margin-top: 30px;
    padding: 10px;
    border-radius: 10px;
    background-color: salmon;
    flex-direction: column;
}




.messagebox h2{   /*The text "Message Box" */
 text-align: center;
 font-weight: 600;
}

.message{    /* The message below the "Message Box"  */
    height: 160px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 30px;
}

.errormessage{ 
    animation: errormsg 0.4s infinite linear; 
}

@keyframes errormsg{   /* This is the message that shows when the user cannot pop any elements because of an empty stack
    or cannot push any elements because of the full stack*/
    0%{ 
     background-color: bisque;
    }
    100% { 
      background-color: rgb(255, 15, 59);
    } }




    .title{   
    color: yellow;
    }